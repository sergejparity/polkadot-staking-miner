name: Build Substrate Binary

on:
  # Allow it to be manually ran to rebuild binary when needed:
  workflow_dispatch: {}
  # Run at 2am every day for nightly builds.
  # schedule:
  #   - cron: "0 2 * * *"

jobs:
  tests:
    name: Build Substrate
    runs-on: ubuntu-latest
    steps:
      - name: checkout polkadot-sdk
        uses: actions/checkout@v4
        with:
          repository: paritytech/polkadot-sdk

      - name: Install dependencies
        run: sudo apt-get install -y protobuf-compiler

      - name: Install WASM toolchain
        run: rustup target add wasm32-unknown-unknown

      - name: Install WASM toolchain
        run: rustup component add rust-src

      - name: Rust Cache
        uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - name: build polkadot binary
        run: |
          cargo build -p polkadot --release --features fast-runtime
          # mkdir -p ~/.local/bin
          # sudo cp ./target/release/polkadot /usr/bin
          # sudo cp ./target/release/polkadot-execute-worker /usr/bin
          # sudo cp ./target/release/polkadot-prepare-worker /usr/bin
          ./target/release/polkadot --version

      - name: upload polkadot binary
        uses: actions/upload-artifact@v3
        with:
          name: nightly-polkadot-binary
          path: |
            target/release/polkadot
            target/release/polkadot-execute-worker
            target/release/polkadot-prepare-worker
          retention-days: 2
          if-no-files-found: error




          # run: |
          # sudo apt install -y protobuf-compiler
          # rustup target add wasm32-unknown-unknown
          # rustup component add rust-src
          # git clone -b master --depth 1 https://github.com/paritytech/polkadot-sdk.git polkadot-sdk
          # cd polkadot-sdk
          # cargo build -p polkadot --release --features fast-runtime
          # mkdir -p ~/.local/bin
          # sudo mv ./target/release/polkadot /usr/bin
          # sudo mv ./target/release/polkadot-execute-worker /usr/bin
          # sudo mv ./target/release/polkadot-prepare-worker /usr/bin
          # polkadot --version
          # cd -
          # rm -rf polkadot