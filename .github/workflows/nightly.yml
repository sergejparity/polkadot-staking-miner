name: Nightly test

on:
  # schedule:
  #   - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  nightly-test:
    runs-on: ubuntu-latest
    # container: paritytech/ci-unified:bullseye-1.74.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free space on the runner
        run: |
          df -h
          sudo apt -y autoremove --purge
          sudo apt -y autoclean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Cache Rust dependencies
        uses: swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Run nightly tests
        run: |
          sudo apt install -y protobuf
          git clone -b master --depth 1 https://github.com/paritytech/polkadot-sdk.git polkadot-sdk
          cd polkadot-sdk
          cargo build -p polkadot --release --features fast-runtime
          mkdir -p ~/.local/bin
          mv ./target/release/polkadot /usr/bin
          mv ./target/release/polkadot-execute-worker /usr/bin
          mv ./target/release/polkadot-prepare-worker /usr/bin
          polkadot --version
          cd -
          rm -rf polkadot
          cd staking-miner-playground
          cargo build --release --features test-trimming
          mv ./target/release/staking-miner-playground /usr/bin
          staking-miner-playground --version
          cd -
          RUST_LOG=info cargo test --workspace --all-features -- --nocapture
          cargo clean

      - name: create_an_issue
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Use this issue template:
          filename: .github/issue_templates/nightly_run_failed.md
          # Update existing issue if found; hopefully will make it clearer
          # that it is still an issue:
          update_existing: true
          # Look for new *open* issues in this search (we want to
          # create a new one if we only find closed versions):
          search_existing: open

        # - name: Fail workflow if tests failed
        #   run: exit 1